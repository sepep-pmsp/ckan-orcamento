name: Deploy Ckan

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs: 
  build_push_acs:  
    runs-on: ubuntu-latest
    steps: 
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_SP_APP_ID }}
        password: ${{ secrets.ACR_SP_PASSWORD }}

    - name: NGINX build and push to ACR
      uses: docker/build-push-action@v5
      with:
         context: ./nginx
         file: ./nginx/Dockerfile
         tags: ${{ secrets.ACR_LOGIN_SERVER }}/ckan-nginx:latest
         #Setar {{ github.event_name != 'pull_request' }}
         push: true

    - name: PostgreSQL build and push to ACR
      uses: docker/build-push-action@v5
      with:
         context: ./postgresql
         file: ./postgresql/Dockerfile
         tags: ${{ secrets.ACR_LOGIN_SERVER }}/ckan-postgresql:latest
         push: true

    - name: CKAN build and push to ACR
      uses: docker/build-push-action@v5
      with:
         context: ./ckan
         file: ./ckan/Dockerfile
         tags: ${{ secrets.ACR_LOGIN_SERVER }}/ckan-ckan:latest
         push: true

  deploy_to_vm:
    runs-on: ubuntu-latest
    needs: build_push_acs
    
    steps:
    - name: SSH into VM and deploy new images
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        script: |
          set -e 
          
          echo "Logging into Azure Container Registry..."
          docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_SP_APP_ID }} -p ${{ secrets.ACR_SP_PASSWORD }}
          
          echo "Navigating to Docker Compose directory..."
          cd ckan-orcamento
          
          echo "Pulling the latest images..."
          docker compose -f docker-compose.prod.yml pull
          
          echo "Stopping and restarting CKAN services..."
          docker compose -f docker-compose.prod.yml up -d --remove-orphans

          echo "Cleaning up old Docker images..."
          docker image prune -af
